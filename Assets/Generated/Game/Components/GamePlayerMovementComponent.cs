//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Game.Player;

public partial class GameEntity {

    public PlayerMovementComponent playerMovement { get { return (PlayerMovementComponent)GetComponent(GameComponentsLookup.PlayerMovement); } }
    public bool hasPlayerMovement { get { return HasComponent(GameComponentsLookup.PlayerMovement); } }

    public void AddPlayerMovement(UnityEngine.Vector3 new_position) {
        var index = GameComponentsLookup.PlayerMovement;
        var component = (PlayerMovementComponent)CreateComponent(index, typeof(PlayerMovementComponent));
        component._position = new_position;
        AddComponent(index, component);
    }

    public void ReplacePlayerMovement(UnityEngine.Vector3 new_position) {
        var index = GameComponentsLookup.PlayerMovement;
        var component = (PlayerMovementComponent)CreateComponent(index, typeof(PlayerMovementComponent));
        component._position = new_position;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerMovement() {
        RemoveComponent(GameComponentsLookup.PlayerMovement);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerMovement;

    public static Entitas.IMatcher<GameEntity> PlayerMovement {
        get {
            if (_matcherPlayerMovement == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerMovement);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerMovement = matcher;
            }

            return _matcherPlayerMovement;
        }
    }
}
